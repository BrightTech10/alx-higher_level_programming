Tests for module ``3-say_my_name``
================================

This module defines the string name function ``say_my_name(first_name, last_name="")``

Usage:
=====

::

First import ``say_my_name`` from module
    >>> say_my_name = __import__('3-say_my_name').say_my_name

``say_my_name`` prints a name in strings

::

Test for first_name(string) and last_name(string)
    >>> say_my_name("John", "Smith")
    My name is John Smith

::

Test for first_name(string), no last_name
    >>> say_my_name("John")
    My name is John 

::

Test for first_name(NoneType) and last_name(string)
    >>> say_my_name(None, "Smith")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

::

Test for first_name(string) and last_name(NoneType)
    >>> say_my_name("John", None)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string

::

Test for first_name(int) and last_name(string)
    >>> say_my_name(3, "Smith")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

::

Test for first_name(string) and last_name(int)
    >>> say_my_name("John", 4)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string

::

Test for first_name(int) and last_name(int)
    >>> say_my_name(3, 5)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

::

Test for first_name(NoneType) and last_name(NoneType)
    >>> say_my_name(None, None)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

::

Test for first_name(empty) and last_name(empty)
    >>> say_my_name()
    Traceback (most recent call last):
        ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
